#!/usr/bin/env python

from pprint import pprint

import arguments
import initialt
import journalt
import chartt
import treet
import entriest

import budgett

import summary
import summary_budget

import ministryt

import layoutt
import report_bills
import report_subfunds
import report_ministry
import report_vendors

################################################################

def main():

    # pylint: disable=too-many-branches

    arg = arguments.parse()

    if arg.dump_arguments:
        pprint(arg)
        return

    if not (arg.bills or arg.subfunds or arg.ministries or
            arg.general or arg.vendors):
        return

    chart = chartt.Chart(chart=arg.chart)
    initial = initialt.Initial(arg.initial)
    budget = budgett.Budget(arg.budget)
    ministry = ministryt.Ministry(chart)
    layout = layoutt.Layout(arg.width)

    journal = journalt.Journal(arg.journal)
    (pcredits, pdebits, ycredits, ydebits) = journal.accumulate(arg.date_start,
                                                                arg.date_end)
    tree = treet.Tree(chart)
    tree.set_initial_balances(initial)
    tree.set_budgets(budget)
    tree.set_balances(pcredits, pdebits, ycredits, ydebits)

    forest = treet.Forest(tree)

    entries = journal.entries()
    entries = entriest.select_by_date(entries,
                                      arg.date_start, arg.date_end,
                                      arg.posted_start, arg.posted_end)

    first_report = True

    if arg.bills:
        if not first_report:
            print "\f"
        first_report = False
        report_bills.bills_report(entries, layout)

    if arg.subfunds:
        if not first_report:
            print "\f"
        first_report = False
        report_subfunds.subfund_report(arg.month_name, forest, layout)

    if arg.ministries:
        if not first_report:
            print "\f"
        first_report = False
        report_ministry.ministry_reports(forest, entries,
                                         ministry, arg.month_name,
                                         layout)

    if arg.general:
        if not first_report:
            print "\f"
        first_report = False
        name = "General Fund"
        general = forest.tree_name(name)
        summary.tree_summary(general, name,
                             arg.period_name, arg.period_name,
                             zeros=False, layout=layout)
        summary_budget.tree_summary(general, name, arg.period_name,
                                    zeros=False, layout=layout)

    if arg.vendors:
        if not first_report:
            print "\f"
        first_report = False
        report_vendors.vendor_report(forest, entries, layout,
                                     all_vendors=arg.all_vendors)

if __name__ == "__main__":
    main()
