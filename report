#!/usr/bin/env python

# pylint: disable=missing-docstring
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

from pprint import pprint

import balance
import income
import chart
import journal
import ministry
import arguments
import finance
import vendor
import statement

def main():
    # pylint: disable=too-many-branches
    args = arguments.parse()
    balance_ = balance.Balance(args.balance)
    income_ = income.Income(args.income)
    journal_ = journal.Journal(args.journal)
    chart_ = chart.Chart(args.chart, balance_)
    ministry_ = ministry.Ministry(chart_)
    report = finance.Finance(chart_, balance_, income_, journal_, ministry_,
                             args)

    if args.dump_chart:
        print chart_.dump_jsons()
        return

    if args.dump_assigned_accounts:
        print ministry_.dump_jsons()
        return

    if args.dump_unassigned_accounts:
        print ministry_.dump_jsons(False)
        return

    if args.dump_arguments:
        pprint(args)
        return

    first_report = True

    if args.material_report:
        if not first_report:
            print "\f"
        first_report = False
        report.material_report()

    if args.ministry_report:
        if not first_report:
            print "\f"
        first_report = False
        report.ministry_reports(newpage=args.newpage)

    if args.subfund_report:
        if not first_report:
            print "\f"
        first_report = False
        statement.subaccount_balance_statement(chart_, balance_,
                                               args.month_name, args.year,
                                               "Special Funds",
                                               zeros=args.zeros)
        statement.subaccount_balance_statement(chart_, balance_,
                                               args.month_name, args.year,
                                               "Investment Return",
                                               zeros=args.zeros)

    if args.vendor_report:
        if not first_report:
            print "\f"
        first_report = False
        ven = vendor.Vendor(args.vendors)
        ven.report(journal_, args)

    if args.unassigned_report:
        if not first_report:
            print "\f"
        first_report = False
        report.unassigned_report()

if __name__ == "__main__":
    main()
